mutation pushInter(
  $farmId: ID!,
  $procedure: InterventionTypeEnum!,
  $cropList: [CreateInterventionTargetInputObject],
  $workingDays: [CreateInterventionWorkingDayInputObject]
  $waterQuantity: Int
  $waterUnit: ArticleVolumeUnit
  $inputs: [CreateInterventionInputInputObject]
  $outputs: [CreateInterventionOutputInputObject]
  $tools: [CreateInterventionToolInputObject]
  $operators: [CreateInterventionOperatorInputObject]
  $weather: WeatherInputObjectType
)
  {
  createInterventionMutation(
    input: {
      intervention: {
        farmID: $farmId
        type: $procedure
        targets: $cropList
        workingDays: $workingDays
        waterQuantity: $waterQuantity
        waterUnit: $waterUnit
        inputs: $inputs
        outputs: $outputs
        tools: $tools
        operators: $operators
        weather: $weather
      }
    }
  ) {
    errors,
    intervention {
      id
    }
  }
}

mutation updateInter(
  $interventionId: ID!
  $farmId: ID!,
  $procedure: InterventionTypeEnum!,
  $weather: WeatherInputObjectType
  $waterQuantity: Int
  $waterUnit: ArticleVolumeUnit
  $cropList: [InterventionTargetInputObject],
  $workingDays: [InterventionWorkingDayInputObject]
  $inputs: [InterventionInputInputObject]
  $outputs: [InterventionOutputInputObject]
  $tools: [InterventionToolInputObject]
  $operators: [InterventionOperatorInputObject]
)
  {
  updateInterventionMutation(
    input: {
      intervention: {
        interventionId: $interventionId
        farmID: $farmId
        type: $procedure
        targets: $cropList
        workingDays: $workingDays
        waterQuantity: $waterQuantity
        waterUnit: $waterUnit
        inputs: $inputs
        outputs: $outputs
        tools: $tools
        operators: $operators
        weather: $weather
      }
    }
  ) {
    errors
  }
}

mutation pushEquipment(
  $farmId: ID!,
  $type: EquipmentTypeEnum,
  $name: String!
  $number: String
) {
  createEquipmentMutation(
    input: {
      equipment: {
        farmID: $farmId
        type: $type
        name: $name
        number: $number
      }
    }
  ) {
    errors,
    equipment {
      id
    }
  }
}

mutation pushPerson(
  $farmId: ID!,
  $firstName: String
  $lastName: String!
) {
  createPersonMutation(
    input: {
      person: {
        farmID: $farmId
        firstName: $firstName
        lastName: $lastName
      }
    }
  ) {
    errors,
    person {
      id
    }
  }
}
