apply plugin: 'com.android.application'
apply plugin: 'com.apollographql.android'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.ekylibre.android"
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 9
        versionName "0.9.6"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
        manifestPlaceholders = [
                'appAuthRedirectScheme': 'agrico'
        ]
        resValue 'string', 'mapbox_token', '"pk.eyJ1IjoibGludXhpcGhvIiwiYSI6ImNqamZwbjV5aDM0bXQzcW8zamRsY3N5ZGcifQ.D3bVCNhekyQLq4cy5JffAQ"'
//        javaCompileOptions {
//            annotationProcessorOptions {
//                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
//            }
//        }
    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue 'string', 'api_url', '"https://api.ekylibre.com"'
            resValue 'string', 'api_agrico', '"https://www.agriconomie.com"'
        }
        debug {
            resValue 'string', 'api_url', '"https://ekylibre-test.com"'
            resValue 'string', 'api_agrico', '"https://ekylibre:ek1l1bre@preprod.agriconomie.com"'
        }
    }
    flavorDimensions "version"
    productFlavors {
        ekylibre {
            dimension "version"
            applicationId 'com.ekylibre.android'
            versionNameSuffix "-eky"
            buildConfigField 'boolean', 'IS_AGRICO', 'false'
            ext {
                client_id = [debug: "e31cb2014a4604ff169b08ab171715a290bd2b24f7b0409a8cc428c75a2f3b75", release: "a95a0450e0a79c21b4d0b8992a4da7aad5bbce5c0c529295d6d78bc197591020"]
                client_secret = [debug: "aa33d1f551329fc8504e2d860767428d500418132c64f746afcc9fc160476293", release: "1a0f31cd06d306f4a184e5e4cd82903f39074ba1fa2e5e84c1f0566afd26a70b"]
            }
        }
        agrico {
            dimension "version"
            applicationId "com.agriconomie.android"
            versionNameSuffix "-agrico"
            buildConfigField 'boolean', 'IS_AGRICO', 'true'
            ext {
                client_id = [debug: "1_4i9aq3clcsysos8c4k8so8kgw4g80w4okc80sowwc0w0ccscwo", release: "2_5vj3h0spce800484o4o08ws4488gcsgkwo4gcs0ocswo800sgk"]
                client_secret = [debug: "5uc7natireo0kksc40s4gs08cow4cgs004cwsw0co4o8so0ksk", release: "4vxjutk8kzs4wowggw040ogg8gw48k4wocw84cgco8g8kggkcw"]
            }
        }
    }
    applicationVariants.all { variant ->
        def flavor = variant.productFlavors[0]
        println "Setting up CLIENT_ID ${flavor.ext.client_id[variant.buildType.name]} for variant [${variant.name}]"
        variant.buildConfigField "String", "CLIENT_ID", "\"${flavor.ext.client_id[variant.buildType.name]}\""
        variant.buildConfigField "String", "CLIENT_SECRET", "\"${flavor.ext.client_secret[variant.buildType.name]}\""
    }
}

apollo {
    customTypeMapping['Date'] = "java.util.Date"
    customTypeMapping['Polygon'] = "com.mapbox.geojson.Polygon"
    customTypeMapping['Point'] = "com.mapbox.geojson.Point"
}


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    // Support libraries
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:exifinterface:27.1.1'
    implementation 'com.android.support:design:27.1.1'
    implementation 'com.android.support:support-v4:27.1.1'
    implementation 'com.android.support:support-fragment:27.1.1'
    implementation 'com.android.support:recyclerview-v7:27.1.1'
    implementation 'com.android.support:support-vector-drawable:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    // Test libraries
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    // Google Services, needed for fixing SSL Handshake error
    implementation 'com.google.android.gms:play-services-base:15.0.1'
    // Room database
    implementation 'android.arch.persistence.room:runtime:1.1.1'
    annotationProcessor 'android.arch.persistence.room:compiler:1.1.1'
    // Retrofit & Picasso
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.4.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.10.0'
    // Apollo GraphQL Client
    implementation 'com.apollographql.apollo:apollo-runtime:0.5.0'
    implementation 'com.apollographql.apollo:apollo-android-support:0.5.0'
    // Mapbox
    implementation 'com.mapbox.mapboxsdk:mapbox-android-sdk:6.2.1'
    implementation 'com.mapbox.mapboxsdk:mapbox-sdk-services:3.3.0'
    implementation 'com.mapbox.mapboxsdk:mapbox-sdk-turf:3.3.0'
    api 'com.google.guava:guava:25.1-android'
    implementation 'com.jakewharton:process-phoenix:2.0.0'
    // Flavor specific libraries for Agriconomie.com
    agricoImplementation 'net.openid:appauth:0.7.1'
}
